package com.company;

import java.io.File;
import java.io.FileNotFoundException;
import java.sql.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) {
        try {
            File myObj = new File(
                    "/home/bubba/Desktop/AdventOfCode/src/com/company/Day5.in");

            Scanner line = new Scanner(myObj);

            // create 2D array and to store hits
            int[][] hits = new int[1000][1000];

            // process
            while (line.hasNextLine()) {

                // parse line into usable data
                String[] data = line.nextLine().split( " ");
                String[] dataPoint1 = data[0].split(",");
                int[] dataPoint1XY = {Integer.parseInt(dataPoint1[0]), Integer.parseInt(dataPoint1[1])};
                String[] dataPoint2 = data[2].split(",");
                int[] dataPoint2XY = {Integer.parseInt(dataPoint2[0]), Integer.parseInt(dataPoint2[1])};

                // record hits
                boolean horzOrVert = true; // 'true' is Horizontal line, 'false" is Vertical line
                if (dataPoint1XY[0] == dataPoint2XY[0]) { // Horizontal
                    horzOrVert = true;
                    hitsUpdate(dataPoint1XY, dataPoint2XY, hits, horzOrVert);
                }
                else if (dataPoint1XY[1] == dataPoint2XY[1]) {  // Vertical
                    horzOrVert = false;
                    hitsUpdate(dataPoint1XY, dataPoint2XY, hits, horzOrVert);
                }
                else {} // Diagonal (do nothing)

            }

            // Determine total of multi-hit coordinates
            int multiHitsCount = 0;
            for (int x = 0; x < hits.length; x++) {
                for (int y = 0; y < hits[0].length; y++) {
                    if (hits[x][y] > 1) {
                        multiHitsCount += 1;
                    }
                }
            }

            // output result
            System.out.println(multiHitsCount);


        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    /*
    Update 2D Array with hits
     */
            private static void hitsUpdate(int[] dataPoint1XY, int[] dataPoint2XY, int[][] hits, boolean horzOrVert) {

                // variables
                int line = 0;
                int lineStart = 0;
                int lineEnd = 0;

                // vertical vs. horizontal line data points
                if (horzOrVert == true) { // Horizontal
                    line = dataPoint1XY[0];
                    lineStart = Math.min(dataPoint1XY[1],dataPoint2XY[1]);
                    lineEnd = Math.max(dataPoint1XY[1],dataPoint2XY[1]);
                    for (int index = lineStart; index <= lineEnd; index++) {
                        hits[index][line] += 1;
                    }
                }
                if (horzOrVert == false) { // Vertical
                    line = dataPoint1XY[1];
                    lineStart = Math.min(dataPoint1XY[0],dataPoint2XY[0]);
                    lineEnd = Math.max(dataPoint1XY[0],dataPoint2XY[0]);
                    for (int index = lineStart; index <= lineEnd; index++) {
                        hits[line][index] += 1;
                    }
                }
            }

        }
